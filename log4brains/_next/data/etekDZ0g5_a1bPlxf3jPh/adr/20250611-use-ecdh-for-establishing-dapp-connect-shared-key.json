{"pageProps":{"projectName":"duckySigner","currentAdr":{"slug":"20250611-use-ecdh-for-establishing-dapp-connect-shared-key","package":null,"title":"Use ECDH for Establishing DApp Connect Shared Secret Key","status":"accepted","supersededBy":null,"tags":["dapp-connect","security","backend"],"deciders":["No-Cash-7970"],"body":{"enhancedMdx":"\n## Context and Problem Statement\n\n<AdrLink slug=\"20240821-use-hawk-for-dapp-connection-authentication-and-authorization\" status=\"accepted\" title=\"Use Hawk for DApp Connection Authentication and Authorization\" customLabel=\"Using Hawk\" /> requires both the dApp and the dApp connect server to use the same shared secret key. This dApp connect shared secret key is not supposed to be known by any entity other than the dApp and the server. It is used by the dApp to send authenticated requests to the server and by the server to verify the dApp's authentication in requests. There needs to be a way to securely create this key and give it to both the dApp and the server.\n\n## Decision Drivers\n\n- Same decision drivers for the <AdrLink slug=\"20240821-use-hawk-for-dapp-connection-authentication-and-authorization\" status=\"accepted\" title=\"Use Hawk for DApp Connection Authentication and Authorization\" customLabel=\"decision to use Hawk\" />\n\n## Considered Options\n\n- Elliptic-curve Diffie-Hellman (ECDH)\n- Transmit the key in plaintext from the server to the dApp\n\n## Decision Outcome\n\nChose to use Elliptic-curve Diffie-Hellman (ECDH) for establishing the dApp connect shared secret key to be used for Hawk. More details for the protocol for establishing the shared key will be documented in a later decision and explained in an [architecture diagram](../diagrams/README.md).\n\n**Confidence:** High. Part of a key establishment protocol for the dApp connect shared secret key has been implemented using ECDH with no problems before this decision was formally made and documented.\n\n### Positive Consequences\n\n- No secret data is sent over the network\n- Most dApps should be capable of using ECDH, especially if an SDK for dApp connect is available for a dApp to use\n- If the X25519 variation of ECDH (ECDH using [Curve25519](https://en.wikipedia.org/wiki/Curve25519)) is used, it may be possible for an Algorand account key pair to be used for authenticating with the dApp connection server\n\n### Negative Consequences\n\n- More [threats](../threat-model/01-threats.md) due to the increase in complexity. Some of these new threats require deeper analysis of the dApp connect feature to be able to identify them.\n\n## Pros and Cons of the Options\n\n### Elliptic-curve Diffie-Hellman\n\nElliptic-curve Diffie–Hellman (ECDH) is the elliptic-curve (EC) variant of the Diffie-Hellman (DH) key exchange protocol. ECDH is what allows the [Buttercup Desktop](https://github.com/buttercup/buttercup-desktop) password manager to securely connect to its [browser extension](https://github.com/buttercup/buttercup-browser-extension). Buttercup's mechanism for securely connecting its desktop app to its browser extension is similar to the <AdrLink slug=\"20240102-use-local-server-to-connect-to-dapps\" status=\"accepted\" title=\"Use Local Server to Connect to DApps\" customLabel=\"dApp connect mechanism\" /> needed for the desktop wallet.\n\n- Pro: A commonly used key exchange protocol, so there are a libraries for doing it properly in a large number of languages. Go has the native `crypto/ecdh` package for it.\n- Pro: No secret is transmitted in plaintext, so it works for localhost where SSL/TLS is likely to be ineffective\n- Con: The increased complexity can open the door to more [threats](../threat-model/01-threats.md)\n- Con: Vulnerable to a Man-in-the-Middle (MitM) attack ([THREAT-009](../threat-model/01-threats.md#threat-009-interception-of-http-communication-between-dapp-and-dapp-connect-server)) where a malicious actor intercepts requests and generates their own key pairs to do DH key exchanges with the server and the client. This allows the actor to intercept messages without being detected by either the client or the server. [Other variants of DH](https://signal.org/docs/specifications/doubleratchet/#recovery-from-compromise), not just ECDH, have this issue because this is [an issue with DH](https://asecuritysite.com/dh/diffie_crack) itself.\n\n### Transmit Shared Secret Key in Plaintext\n\nThe shared secret key would be generated by the server and sent to the dApp in plaintext as a normal HTTP response.\n\n- Pro: Very simple\n- Con: Requires ignoring [THREAT-009](../threat-model/01-threats.md#threat-009-interception-of-http-communication-between-dapp-and-dapp-connect-server), where a bad actor intercepts the transmission of the shared secret key and obtains the shared secret key that is unprotected by SSL/TLS on localhost\n\n## Links\n\n- Refines <AdrLink slug=\"20240821-use-hawk-for-dapp-connection-authentication-and-authorization\" status=\"accepted\" title=\"Use Hawk for DApp Connection Authentication and Authorization\" customLabel=\"Use Hawk for DApp Connection Authentication and Authorization\" />\n- Relates to <AdrLink slug=\"20250619-dapp-connect-protocol\" status=\"accepted\" title=\"DApp Connect Protocol\" customLabel=\"DApp Connect Protocol\" />\n- Relates to <AdrLink slug=\"20250621-vocab-for-dapp-connect\" status=\"accepted\" title=\"Vocabulary for DApp Connect\" customLabel=\"Vocabulary for DApp Connect\" />\n- [ECDH Key Exchange - Practical Cryptography for Developers](https://cryptobook.nakov.com/asymmetric-key-ciphers/ecdh-key-exchange)\n- [Elliptic-curve Diffie–Hellman - Wikipedia](https://en.wikipedia.org/wiki/Elliptic-curve_Diffie%E2%80%93Hellman)\n- [Diffie–Hellman key exchange - Wikipedia](https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange)\n"},"creationDate":"2025-06-11T20:50:48.000Z","lastEditDate":"2025-07-01T21:21:42.000Z","lastEditAuthor":"No-Cash-7970","publicationDate":"2025-06-12T06:59:59.000Z","file":{"relativePath":"docs/decisions/20250611-use-ecdh-for-establishing-dapp-connect-shared-key.md","absolutePath":"/home/runner/work/duckySigner/duckySigner/docs/decisions/20250611-use-ecdh-for-establishing-dapp-connect-shared-key.md"},"repository":{"provider":"github","viewUrl":"https://github.com/No-Cash-7970/duckySigner/blob/master/docs/decisions/20250611-use-ecdh-for-establishing-dapp-connect-shared-key.md"}},"l4bVersion":"1.1.0"},"__N_SSG":true}