package dapp_connect

import (
	"crypto/ecdh"
	"io"
)

// ECDHCurve is a ECDH curve interface based on the `ecdh.Curve` interface in
// the `crypto/ecdh` package
type ECDHCurve interface {
	GenerateKey(rand io.Reader) (*ecdh.PrivateKey, error)
	NewPrivateKey(key []byte) (*ecdh.PrivateKey, error)
	NewPublicKey(key []byte) (*ecdh.PublicKey, error)
}

// ApiError is an error message
type ApiError struct {
	// Error name
	Name string `json:"name,omitempty"`
	// Error message
	Message string `json:"message,omitempty"`
}

// DappData is data about a dApp
type DappData struct {
	// Name of the application connecting to wallet
	Name string `json:"name" validate:"required"`
	// URL for the app connecting to the wallet
	URL string `json:"url,omitempty" validate:"omitempty,uri"`
	// Description of the app
	Description string `json:"desc,omitempty"`
	// Icon for the app connecting to wallet as a data URI for an image (JPEG,
	// PNG or SVG)
	Icon string `json:"icon,omitempty"`
}

// DAppInfo is dApp information received from a dApp
type DAppInfo struct {
	DappData `json:"dapp"`
	// The dApp ID generated and given by the dApp. It is the public key of the
	// key pair generated by the dApp
	DappId string `json:"dapp_id"`
}
