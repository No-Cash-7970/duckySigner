package dappconnect

import (
	"crypto/ecdh"
	"io"

	"github.com/awnumar/memguard"
)

// ECDH curve interface based on the `ecdh.Curve` interface in the `crypto/ecdh`
// package
type ECDHCurve interface {
	GenerateKey(rand io.Reader) (*ecdh.PrivateKey, error)
	NewPrivateKey(key []byte) (*ecdh.PrivateKey, error)
	NewPublicKey(key []byte) (*ecdh.PublicKey, error)
}

// A set of credentials for authenticating using Hawk
type HawkCredentials struct {
	// Authentication ID
	ID string `json:"id"`
	// Authentication key
	Key string `json:"key"`
	// The hash algorithm used to create the message authentication code (MAC)
	Algorithm string `json:"algorithm"`
}

// An error message
type ApiError struct {
	// Error name
	Name string `json:"name,omitempty"`
	// Error message
	Message string `json:"message,omitempty"`
}

// DApp information received from a dApp
type DAppInfo struct {
	// Name of the application connecting to wallet
	Name string `json:"name"`
	// URL for the app connecting to the wallet
	Url string `json:"url,omitempty"`
	// Description of the app
	Description string `json:"description,omitempty"`
	// Icon for the app connecting to wallet as a Base64 encoded JPEG, PNG or
	// SVG data URI
	Icon string `json:"icon,omitempty"`
	// The dApp ID generated and given by the dApp. It is the public key of the
	// key pair generated by the dApp
	DappId string `json:"dapp_id"`
}

// Session information that is eventually stored by the dApp connect server
type DappConnectSession struct {
	// Unique ECDH (Elliptic-curve Diffieâ€“Hellman) public key generated by the
	// dApp. Can be used as a unique ID for the dApp. However, this ID could
	// change every time the dApp attempts to initialize a new connection
	// session.
	DappId *ecdh.PublicKey
	// ECDH public key that is unique to the connection server. Every connection
	// session has a unique session ID.
	SessionID *ecdh.PublicKey
	// ECDH private key used to derive the dApp connection shared key. This key
	// is secret and should be known only by the connection server.
	// TODO: Rename to SessionKey
	ServerKey *memguard.Enclave
	// ECDH derived shared key used to verify dApp authentication. The dApp also
	// derives this same key on its end, but it uses its private key ("dApp key")
	// and the session ID (generated and given by the server).
	DappConnectSharedKey *memguard.Enclave
}
